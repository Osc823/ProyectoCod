paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos.
      tags:
        - Products
      responses:
        "200":
          description: Respuesta exitosa. Retorna un arreglo con los productos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.
  
  /api/products:
    post:
      summary: Crea un nuevo producto.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "201":
          description: Producto creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "401":
          description: No autorizado para crear un producto.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /api/products/{pid}:
    get:
      summary: Obtiene un producto por su ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se desea solicitar.
          schema:
            type: string
      responses:
        "200":
          description: Respuesta exitosa. Retorna el producto correspondiente al ID proporcionado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: No se encontró ningún producto con el ID proporcionado.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.
  
  /api/products/{pid}/update:
    put:
      summary: Actualiza un producto por su ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se desea actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: Producto actualizado correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "401":
          description: No autorizado para actualizar el producto.
        "404":
          description: No se encontró ningún producto con el ID proporcionado.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /api/products/{pid}/delete:
    delete:
      summary: Elimina un producto por su ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se desea eliminar.
          schema:
            type: string
      responses:
        "204":
          description: Producto eliminado correctamente.
        "401":
          description: No autorizado para eliminar el producto.
        "404":
          description: No se encontró ningún producto con el ID proporcionado.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.


components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado del producto.
        title:
          type: string
          description: Título del producto.
        description:
          type: string
          description: Descripción del producto.
        price:
          type: number
          description: Precio del producto.
        thumbnail:
          type: string
          description: URL de la imagen en miniatura del producto.
        code:
          type: string
          description: Código del producto.
        stock:
          type: integer
          description: Cantidad disponible en stock del producto.
        marca:
          type: string
          enum: [Nike, Adidas, Puma]
          description: Marca del producto.
        userId:
          type: string
          description: ID del usuario que creó el producto.
      example:
        _id: "6097a2ac6d33a60015b50a50"
        title: Zapatos deportivos
        description: Zapatos ideales para correr.
        price: 59.99
        thumbnail: https://example.com/thumbnail.jpg
        code: ZP123
        stock: 100
        marca: Nike
        userId: "6097a2ac6d33a60015b50a51"
